{"ast":null,"code":"var _jsxFileName = \"/Users/oleyna/Desktop/practice-redux/phase10-redux/src/components/playerCard/playerCard.js\",\n  _s = $RefreshSig$();\nimport { Button, Input } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUserName, finishPhaseForUser, updateScore } from \"../../slices/userSlice\";\nimport { roundWinner } from \"../../slices/gameSlice\";\nimport { PlayerContainer } from \"../../styles/cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PlayerCard(_ref) {\n  _s();\n  let {\n    user,\n    index\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const winnerId = useSelector(state => state.game.roundWinner);\n  const dispatch = useDispatch();\n  const [edit, setEdit] = useState(true);\n  const changeName = id => {\n    dispatch(addUserName({\n      name: name,\n      id: id\n    }));\n    setEdit(false);\n  };\n  const inputName = event => {\n    const userName = event.target.value;\n    return setName(userName);\n  };\n  const editName = () => {\n    setEdit(true);\n  };\n  const roundWon = id => {\n    dispatch(roundWinner(id));\n  };\n  const finishPhase = id => {\n    dispatch(finishPhaseForUser(id));\n  };\n  const updateScoreInStore = (event, id) => {\n    dispatch(updateScore({\n      id: id,\n      score: parseInt(event.target.value)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContainer, {\n    children: [edit && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: event => inputName(event),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => changeName(user.id),\n        children: \"\\u221A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), !edit && /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => editName(),\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), winnerId && winnerId !== user.id && /*#__PURE__*/_jsxDEV(Input, {\n      onChange: event => updateScoreInStore(event, user.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), (!winnerId || winnerId && winnerId === user.id) && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => roundWon(user.id),\n      children: \"Win\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => finishPhase(user.id),\n      disabled: user.finishedPhase,\n      children: \"Finished phase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Phase \", user.phase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(PlayerCard, \"TC2D1koYsLxzhV46ca2Dlm0xJ3I=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = PlayerCard;\nvar _c;\n$RefreshReg$(_c, \"PlayerCard\");","map":{"version":3,"names":["Button","Input","Box","useState","useDispatch","useSelector","addUserName","finishPhaseForUser","updateScore","roundWinner","PlayerContainer","PlayerCard","user","index","name","setName","winnerId","state","game","dispatch","edit","setEdit","changeName","id","inputName","event","userName","target","value","editName","roundWon","finishPhase","updateScoreInStore","score","parseInt","finishedPhase","phase"],"sources":["/Users/oleyna/Desktop/practice-redux/phase10-redux/src/components/playerCard/playerCard.js"],"sourcesContent":["import { Button, Input } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUserName, finishPhaseForUser, updateScore } from \"../../slices/userSlice\";\nimport { roundWinner } from \"../../slices/gameSlice\";\nimport { PlayerContainer } from \"../../styles/cards\";\n\nexport function PlayerCard({ user, index }) {\n    const [name, setName] = useState(\"\");\n    const winnerId = useSelector((state) => state.game.roundWinner);\n    const dispatch = useDispatch();\n    const [edit, setEdit] = useState(true);\n\n    const changeName = (id) => {\n        dispatch(addUserName({\n            name: name,\n            id: id\n        }));\n        setEdit(false)\n\n    };\n    const inputName = (event) => {\n        const userName = event.target.value\n        return setName(userName)\n    };\n\n    const editName = () => {\n        setEdit(true);\n    };\n\n    const roundWon = (id) => {\n        dispatch(roundWinner(id));\n    };\n\n    const finishPhase = (id) => {\n        dispatch(finishPhaseForUser(id));\n    }\n\n    const updateScoreInStore = (event, id) => {\n        dispatch(updateScore({\n            id: id,\n            score: parseInt(event.target.value)\n        }))\n    }\n\n\n    return (\n        <PlayerContainer>\n\n            {edit &&\n                <Box>\n                    <Input onChange={(event) => inputName(event)} value={name}></Input>\n\n                    <Button onClick={() => changeName(user.id)}>âˆš</Button>\n                </Box>\n            }\n            {!edit &&\n                <Box display={\"flex\"}>\n                    <h3>{name}</h3>\n                    <Button onClick={() => editName()}>/</Button>\n                </Box>\n            }\n\n            <div>{user.score}</div>\n\n            {winnerId && winnerId !== user.id &&\n\n                <Input onChange={(event) => updateScoreInStore(event, user.id)}></Input>\n\n\n            }\n            {(!winnerId || (winnerId && winnerId === user.id)) &&\n                <Button onClick={() => roundWon(user.id)}>Win</Button>\n            }\n\n\n            <Button onClick={() => finishPhase(user.id)} disabled={user.finishedPhase}>Finished phase</Button>\n            <h3>Phase {user.phase}</h3>\n\n        </PlayerContainer>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}