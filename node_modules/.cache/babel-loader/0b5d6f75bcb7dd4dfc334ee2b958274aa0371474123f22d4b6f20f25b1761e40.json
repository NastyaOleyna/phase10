{"ast":null,"code":"var _jsxFileName = \"/Users/oleyna/Desktop/phase10-redux/src/components/playerCard/playerCard.js\",\n  _s = $RefreshSig$();\nimport { Button, Input, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUserName, finishPhaseForUser, updateScore } from \"../../slices/userSlice\";\nimport { roundWinner } from \"../../slices/gameSlice\";\nimport { CardsButtons, CheckMarkButton, CheckMarkContainer, EditIconContainer, EditNameContainer, InputEdit, NameContainer, PlayerContainer, ScoreValue } from \"../../styles/cards\";\nimport CheckMarkImage from \"../../images/checkmark.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(CheckMarkImage);\nexport function PlayerCard(_ref) {\n  _s();\n  let {\n    user,\n    index\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [edit, setEdit] = useState(true);\n  const [score, setScore] = useState(0);\n  const [editScore, setEditScore] = useState(false);\n  const winnerId = useSelector(state => state.game.roundWinner);\n  const round = useSelector(state => state.game.round);\n  const dispatch = useDispatch();\n  const ifPlayerIsNotWinner = !winnerId || winnerId && winnerId === user.id;\n  const ifPlayerIsWinner = winnerId && winnerId !== user.id;\n  useEffect(() => {\n    setEditScore(false);\n  }, [round]);\n  const changeName = id => {\n    dispatch(addUserName({\n      name: name,\n      id: id\n    }));\n    setEdit(false);\n  };\n  const inputName = event => {\n    const userName = event.target.value;\n    return setName(userName);\n  };\n  const editName = () => {\n    setEdit(true);\n  };\n  const roundWon = id => {\n    dispatch(roundWinner(id));\n  };\n  const changeScoreForRound = event => {\n    setScore(parseInt(event.target.value));\n  };\n  const updateScoreInStore = id => {\n    dispatch(updateScore({\n      id: id,\n      score: score\n    }));\n  };\n  const finishPhase = id => {\n    dispatch(finishPhaseForUser(id));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateScoreInStore(user.id);\n    setEditScore(true);\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContainer, {\n    children: [edit && /*#__PURE__*/_jsxDEV(EditNameContainer, {\n      children: [/*#__PURE__*/_jsxDEV(InputEdit, {\n        variant: \"outlined\",\n        onChange: event => inputName(event),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => changeName(user.id),\n        children: /*#__PURE__*/_jsxDEV(CheckMarkContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), !edit && /*#__PURE__*/_jsxDEV(NameContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 40\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => editName(),\n        children: /*#__PURE__*/_jsxDEV(EditIconContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ScoreValue, {\n      children: user.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), ifPlayerIsWinner && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(InputEdit, {\n        disabled: editScore,\n        onChange: event => changeScoreForRound(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: editScore,\n        children: /*#__PURE__*/_jsxDEV(CheckMarkContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CardsButtons, {\n      onClick: () => roundWon(user.id),\n      variant: \"contained\",\n      children: \"Win\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CardsButtons, {\n      onClick: () => finishPhase(user.id),\n      disabled: user.finishedPhase,\n      variant: \"contained\",\n      children: \"Finished phase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Phase \", user.phase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(PlayerCard, \"aq6Q1yN+9prbK7unPcrm+f6eNic=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = PlayerCard;\nvar _c;\n$RefreshReg$(_c, \"PlayerCard\");","map":{"version":3,"names":["Button","Input","TextField","Typography","Box","useEffect","useState","useDispatch","useSelector","addUserName","finishPhaseForUser","updateScore","roundWinner","CardsButtons","CheckMarkButton","CheckMarkContainer","EditIconContainer","EditNameContainer","InputEdit","NameContainer","PlayerContainer","ScoreValue","CheckMarkImage","console","log","PlayerCard","user","index","name","setName","edit","setEdit","score","setScore","editScore","setEditScore","winnerId","state","game","round","dispatch","ifPlayerIsNotWinner","id","ifPlayerIsWinner","changeName","inputName","event","userName","target","value","editName","roundWon","changeScoreForRound","parseInt","updateScoreInStore","finishPhase","handleSubmit","e","preventDefault","fontSize","finishedPhase","phase"],"sources":["/Users/oleyna/Desktop/phase10-redux/src/components/playerCard/playerCard.js"],"sourcesContent":["import { Button, Input, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUserName, finishPhaseForUser, updateScore } from \"../../slices/userSlice\";\nimport { roundWinner } from \"../../slices/gameSlice\";\nimport { CardsButtons, CheckMarkButton, CheckMarkContainer, EditIconContainer, EditNameContainer, InputEdit, NameContainer, PlayerContainer, ScoreValue } from \"../../styles/cards\";\n\nimport CheckMarkImage from \"../../images/checkmark.svg\"\nconsole.log(CheckMarkImage);\nexport function PlayerCard({ user, index }) {\n    const [name, setName] = useState(\"\");\n    const [edit, setEdit] = useState(true);\n    const [score, setScore] = useState(0);\n    const [editScore, setEditScore] = useState(false);\n\n    const winnerId = useSelector((state) => state.game.roundWinner);\n    const round = useSelector((state) => state.game.round);\n\n    const dispatch = useDispatch();\n\n    const ifPlayerIsNotWinner = (!winnerId || (winnerId && winnerId === user.id));\n    const ifPlayerIsWinner = (winnerId && winnerId !== user.id);\n\n    useEffect(() => {\n        setEditScore(false);\n    }, [round]);\n\n\n\n    const changeName = (id) => {\n        dispatch(addUserName({\n            name: name,\n            id: id\n        }));\n        setEdit(false);\n    };\n\n    const inputName = (event) => {\n        const userName = event.target.value;\n        return setName(userName)\n    };\n\n    const editName = () => {\n        setEdit(true);\n    };\n\n\n\n    const roundWon = (id) => {\n        dispatch(roundWinner(id));\n    };\n\n\n    const changeScoreForRound = (event) => {\n        setScore(parseInt(event.target.value))\n    };\n\n    const updateScoreInStore = (id) => {\n        dispatch(updateScore({\n            id: id,\n            score: score\n        }))\n    };\n\n\n    const finishPhase = (id) => {\n        dispatch(finishPhaseForUser(id));\n    };\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        updateScoreInStore(user.id);\n        setEditScore(true)\n    };\n\n\n\n\n    return (\n        <PlayerContainer>\n\n            {edit &&\n                <EditNameContainer>\n                    <InputEdit\n                        variant=\"outlined\"\n                        onChange={(event) => inputName(event)} value={name}\n                    >\n\n                    </InputEdit>\n\n                    <Button onClick={() => changeName(user.id)} >\n                        <CheckMarkContainer />\n                    </Button>\n                </EditNameContainer>\n            }\n            {!edit &&\n                <NameContainer>\n                    <Typography sx={{ fontSize: 40 }} >\n                        {name}\n                    </Typography>\n                    <Button onClick={() => editName()} >\n                        <EditIconContainer />\n                    </Button>\n                </NameContainer>\n            }\n\n            <ScoreValue>\n                {user.score}\n            </ScoreValue>\n\n            {ifPlayerIsWinner &&\n\n                <form onSubmit={handleSubmit} >\n                    <InputEdit\n                        disabled={editScore}\n                        onChange={(event) => changeScoreForRound(event)} >\n                    </InputEdit>\n                    <Button type=\"submit\" disabled={editScore} >\n                        <CheckMarkContainer />\n                    </Button>\n                </form>\n\n\n            }\n            \n                <CardsButtons onClick={() => roundWon(user.id)} variant={\"contained\"}>Win</CardsButtons>\n            \n\n\n            <CardsButtons onClick={() => finishPhase(user.id)}\n                disabled={user.finishedPhase}\n                variant={\"contained\"}>\n                Finished phase\n            </CardsButtons>\n            <Typography>Phase {user.phase}</Typography>\n\n        </PlayerContainer>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}