{"ast":null,"code":"var _jsxFileName = \"/Users/oleyna/Desktop/phase10-redux/src/components/playerCard/playerCard.js\",\n  _s = $RefreshSig$();\nimport { Button, Input, List, ListItem, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUserName, finishPhaseForUser, updateScore } from \"../../slices/userSlice\";\nimport { roundWinner } from \"../../slices/gameSlice\";\nimport { CardsButtons, CheckMarkButton, CheckMarkContainer, EditIconContainer, EditNameContainer, InputEdit, NameContainer, PlayerContainer, ScoreValue } from \"../../styles/cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PlayerCard(_ref) {\n  _s();\n  let {\n    user,\n    index\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [edit, setEdit] = useState(true);\n  const [score, setScore] = useState(0);\n  const [editScore, setEditScore] = useState(false);\n  const winnerId = useSelector(state => state.game.roundWinner);\n  const round = useSelector(state => state.game.round);\n  const dispatch = useDispatch();\n  const ifPlayerIsWinner = winnerId && winnerId !== user.id;\n  useEffect(() => {\n    setEditScore(false);\n  }, [round]);\n  const changeName = id => {\n    dispatch(addUserName({\n      name: name,\n      id: id\n    }));\n    setEdit(false);\n  };\n  const inputName = event => {\n    const userName = event.target.value;\n    return setName(userName);\n  };\n  const editName = () => {\n    setEdit(true);\n  };\n  const roundWon = id => {\n    dispatch(roundWinner(id));\n  };\n  const changeScoreForRound = event => {\n    setScore(parseInt(event.target.value));\n  };\n  const updateScoreInStore = id => {\n    dispatch(updateScore({\n      id: id,\n      score: score\n    }));\n  };\n  const finishPhase = id => {\n    dispatch(finishPhaseForUser(id));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateScoreInStore(user.id);\n    setEditScore(true);\n  };\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(PlayerContainer, {\n        children: [edit ? /*#__PURE__*/_jsxDEV(EditNameContainer, {\n          children: [/*#__PURE__*/_jsxDEV(InputEdit, {\n            variant: \"standard\",\n            size: \"small\",\n            onChange: event => inputName(event),\n            value: name,\n            InputProps: {\n              disableUnderline: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => changeName(user.id),\n            children: /*#__PURE__*/_jsxDEV(CheckMarkContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(NameContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: 40\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => editName(),\n            children: /*#__PURE__*/_jsxDEV(EditIconContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ScoreValue, {\n          children: user.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), ifPlayerIsWinner ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(InputEdit, {\n            variant: \"standard\",\n            size: \"small\",\n            disabled: editScore,\n            onChange: event => changeScoreForRound(event),\n            InputProps: {\n              disableUnderline: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: editScore,\n            children: /*#__PURE__*/_jsxDEV(CheckMarkContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(CardsButtons, {\n          onClick: () => roundWon(user.id),\n          variant: \"contained\",\n          children: \"Win\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardsButtons, {\n          onClick: () => finishPhase(user.id),\n          disabled: user.finishedPhase,\n          variant: \"contained\",\n          children: \"Finished phase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Phase \", user.phase]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(PlayerCard, \"aq6Q1yN+9prbK7unPcrm+f6eNic=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = PlayerCard;\nvar _c;\n$RefreshReg$(_c, \"PlayerCard\");","map":{"version":3,"names":["Button","Input","List","ListItem","TextField","Typography","Box","useEffect","useState","useDispatch","useSelector","addUserName","finishPhaseForUser","updateScore","roundWinner","CardsButtons","CheckMarkButton","CheckMarkContainer","EditIconContainer","EditNameContainer","InputEdit","NameContainer","PlayerContainer","ScoreValue","PlayerCard","user","index","name","setName","edit","setEdit","score","setScore","editScore","setEditScore","winnerId","state","game","round","dispatch","ifPlayerIsWinner","id","changeName","inputName","event","userName","target","value","editName","roundWon","changeScoreForRound","parseInt","updateScoreInStore","finishPhase","handleSubmit","e","preventDefault","disableUnderline","fontSize","finishedPhase","phase"],"sources":["/Users/oleyna/Desktop/phase10-redux/src/components/playerCard/playerCard.js"],"sourcesContent":["import { Button, Input, List, ListItem, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUserName, finishPhaseForUser, updateScore } from \"../../slices/userSlice\";\nimport { roundWinner } from \"../../slices/gameSlice\";\nimport { CardsButtons, CheckMarkButton, CheckMarkContainer, EditIconContainer, EditNameContainer, InputEdit, NameContainer, PlayerContainer, ScoreValue } from \"../../styles/cards\";\n\nexport function PlayerCard({ user, index }) {\n    const [name, setName] = useState(\"\");\n    const [edit, setEdit] = useState(true);\n    const [score, setScore] = useState(0);\n    const [editScore, setEditScore] = useState(false);\n\n    const winnerId = useSelector((state) => state.game.roundWinner);\n    const round = useSelector((state) => state.game.round);\n\n    const dispatch = useDispatch();\n\n    const ifPlayerIsWinner = (winnerId && winnerId !== user.id);\n\n    useEffect(() => {\n        setEditScore(false);\n    }, [round]);\n\n\n\n    const changeName = (id) => {\n        dispatch(addUserName({\n            name: name,\n            id: id\n        }));\n        setEdit(false);\n    };\n\n    const inputName = (event) => {\n        const userName = event.target.value;\n        return setName(userName)\n    };\n\n    const editName = () => {\n        setEdit(true);\n    };\n\n\n\n    const roundWon = (id) => {\n        dispatch(roundWinner(id));\n    };\n\n\n    const changeScoreForRound = (event) => {\n        setScore(parseInt(event.target.value))\n    };\n\n    const updateScoreInStore = (id) => {\n        dispatch(updateScore({\n            id: id,\n            score: score\n        }))\n    };\n\n\n    const finishPhase = (id) => {\n        dispatch(finishPhaseForUser(id));\n    };\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        updateScoreInStore(user.id);\n        setEditScore(true)\n    };\n\n\n\n\n    return (\n        <List>\n            <ListItem>\n        <PlayerContainer>\n            {edit ?\n                <EditNameContainer>\n                    <InputEdit\n                        variant=\"standard\"\n                        size=\"small\"\n                        onChange={(event) => inputName(event)} value={name}\n                        InputProps={{\n                            disableUnderline: true,\n                        }}\n                    />\n                    <Button onClick={() => changeName(user.id)}>\n                        <CheckMarkContainer />\n                    </Button>\n                </EditNameContainer>\n                :\n                <NameContainer>\n                    <Typography sx={{ fontSize: 40 }}>\n                        {name}\n                    </Typography>\n                    <Button onClick={() => editName()}>\n                        <EditIconContainer />\n                    </Button>\n                </NameContainer>\n            }\n            <ScoreValue>\n                {user.score}\n            </ScoreValue>\n\n            {ifPlayerIsWinner ?\n                <form onSubmit={handleSubmit}>\n                    <InputEdit\n                        variant=\"standard\"\n                        size=\"small\"\n                        disabled={editScore}\n                        onChange={(event) => changeScoreForRound(event)}\n                        InputProps={{\n                            disableUnderline: true,\n                        }}\n                        >\n                    </InputEdit>\n                    <Button type=\"submit\" disabled={editScore}>\n                        <CheckMarkContainer />\n                    </Button>\n                </form>\n            \n            :\n            <CardsButtons\n            onClick={() => roundWon(user.id)}\n            variant={\"contained\"}\n            >\n                Win\n            </CardsButtons>\n            }\n            <CardsButtons\n                onClick={() => finishPhase(user.id)}\n                disabled={user.finishedPhase}\n                variant={\"contained\"}>\n                Finished phase\n            </CardsButtons>\n            <Typography>Phase {user.phase}</Typography>\n        </PlayerContainer>\n                    </ListItem>\n                </List>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}