{"ast":null,"code":"const {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst initialState = [{\n  id: 1,\n  name: \"\",\n  score: 0,\n  phase: 1,\n  finishedPhase: false\n}, {\n  id: 2,\n  name: \"\",\n  score: 0,\n  phase: 1,\n  finishedPhase: false\n}];\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    addUser(state) {\n      const newUser = {\n        id: state.length + 1,\n        score: 0,\n        phase: 1\n      };\n      return [...state, newUser];\n    },\n    addUserName(state, _ref) {\n      let {\n        payload: {\n          id,\n          name\n        }\n      } = _ref;\n      return state.map(item => item.id === id ? {\n        ...item,\n        name\n      } : item);\n    },\n    finishPhaseForUser(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      return state.map(item => item.id === payload ? {\n        ...item,\n        finishedPhase: true\n      } : item);\n    },\n    updatePhaseForNewRound(state) {\n      return state.map(item => item.finishedPhase ? {\n        ...item,\n        finishedPhase: false,\n        phase: item.phase + 1\n      } : item);\n    },\n    updateScore(state, _ref3) {\n      let {\n        payload: {\n          id,\n          score\n        }\n      } = _ref3;\n      return state.map(item => item.id === id ? {\n        ...item,\n        score: item.score + score\n      } : item);\n    },\n    deleteUserCard(state, _ref4) {\n      let {\n        payload\n      } = _ref4;\n      return state.filter(item => item.id !== payload);\n    }\n  }\n});\nexport default usersSlice.reducer;\nexport const {\n  addUser,\n  addUserName,\n  finishPhaseForUser,\n  updatePhaseForNewRound,\n  updateScore,\n  deleteUserCard\n} = usersSlice.actions;","map":{"version":3,"names":["createSlice","require","initialState","id","name","score","phase","finishedPhase","usersSlice","reducers","addUser","state","newUser","length","addUserName","payload","map","item","finishPhaseForUser","updatePhaseForNewRound","updateScore","deleteUserCard","filter","reducer","actions"],"sources":["/Users/oleyna/Desktop/phase10-redux/src/slices/userSlice.js"],"sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\n\n\nconst initialState = [\n    {\n        id: 1,\n        name: \"\",\n        score: 0,\n        phase: 1,\n        finishedPhase: false,\n    },\n    {\n        id: 2,\n        name: \"\",\n        score: 0,\n        phase: 1,\n        finishedPhase: false,\n    }\n];\n\nconst usersSlice = createSlice({\n    name: \"users\",\n    initialState,\n    reducers: {\n        addUser(state) {\n            const newUser = { id: state.length + 1, score: 0, phase: 1 };\n            return [...state, newUser]\n        },\n        addUserName(state, { payload: { id, name } }) {\n            return state.map((item) => item.id === id ? { ...item, name } : item)\n        },\n        finishPhaseForUser(state, { payload }) {\n            return state.map((item) => item.id === payload ? { ...item, finishedPhase: true } : item)\n        },\n        updatePhaseForNewRound(state) {\n            return state.map((item) => item.finishedPhase ? { ...item, finishedPhase: false, phase: item.phase + 1 } : item)\n        },\n        updateScore(state, { payload: { id, score } }) {\n            return state.map((item) => item.id === id ? { ...item, score: item.score + score } : item);\n        },\n        deleteUserCard(state, {payload}) {\n            return state.filter((item) => item.id !== payload)\n        }\n\n    }\n});\n\nexport default usersSlice.reducer;\nexport const { addUser, addUserName, finishPhaseForUser, updatePhaseForNewRound, updateScore, deleteUserCard } = usersSlice.actions"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAGnD,MAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE;AACnB,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE;AACnB,CAAC,CACJ;AAED,MAAMC,UAAU,GAAGR,WAAW,CAAC;EAC3BI,IAAI,EAAE,OAAO;EACbF,YAAY;EACZO,QAAQ,EAAE;IACNC,OAAO,CAACC,KAAK,EAAE;MACX,MAAMC,OAAO,GAAG;QAAET,EAAE,EAAEQ,KAAK,CAACE,MAAM,GAAG,CAAC;QAAER,KAAK,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAE,CAAC;MAC5D,OAAO,CAAC,GAAGK,KAAK,EAAEC,OAAO,CAAC;IAC9B,CAAC;IACDE,WAAW,CAACH,KAAK,QAA6B;MAAA,IAA3B;QAAEI,OAAO,EAAE;UAAEZ,EAAE;UAAEC;QAAK;MAAE,CAAC;MACxC,OAAOO,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACd,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGc,IAAI;QAAEb;MAAK,CAAC,GAAGa,IAAI,CAAC;IACzE,CAAC;IACDC,kBAAkB,CAACP,KAAK,SAAe;MAAA,IAAb;QAAEI;MAAQ,CAAC;MACjC,OAAOJ,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACd,EAAE,KAAKY,OAAO,GAAG;QAAE,GAAGE,IAAI;QAAEV,aAAa,EAAE;MAAK,CAAC,GAAGU,IAAI,CAAC;IAC7F,CAAC;IACDE,sBAAsB,CAACR,KAAK,EAAE;MAC1B,OAAOA,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACV,aAAa,GAAG;QAAE,GAAGU,IAAI;QAAEV,aAAa,EAAE,KAAK;QAAED,KAAK,EAAEW,IAAI,CAACX,KAAK,GAAG;MAAE,CAAC,GAAGW,IAAI,CAAC;IACpH,CAAC;IACDG,WAAW,CAACT,KAAK,SAA8B;MAAA,IAA5B;QAAEI,OAAO,EAAE;UAAEZ,EAAE;UAAEE;QAAM;MAAE,CAAC;MACzC,OAAOM,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACd,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGc,IAAI;QAAEZ,KAAK,EAAEY,IAAI,CAACZ,KAAK,GAAGA;MAAM,CAAC,GAAGY,IAAI,CAAC;IAC9F,CAAC;IACDI,cAAc,CAACV,KAAK,SAAa;MAAA,IAAX;QAACI;MAAO,CAAC;MAC3B,OAAOJ,KAAK,CAACW,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACd,EAAE,KAAKY,OAAO,CAAC;IACtD;EAEJ;AACJ,CAAC,CAAC;AAEF,eAAeP,UAAU,CAACe,OAAO;AACjC,OAAO,MAAM;EAAEb,OAAO;EAAEI,WAAW;EAAEI,kBAAkB;EAAEC,sBAAsB;EAAEC,WAAW;EAAEC;AAAe,CAAC,GAAGb,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}