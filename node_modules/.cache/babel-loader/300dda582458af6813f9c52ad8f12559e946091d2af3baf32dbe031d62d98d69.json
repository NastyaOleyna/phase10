{"ast":null,"code":"var _jsxFileName = \"/Users/oleyna/Desktop/phase10-redux/src/components/playerCard/playerCard.js\",\n  _s = $RefreshSig$();\nimport { Button, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUserName, deleteUserCard, finishPhaseForUser, updateScore } from \"../../slices/userSlice\";\nimport { roundWinner } from \"../../slices/gameSlice\";\nimport { CardsButtons, CheckMarkContainer, DeletePlayerIcon, EditIconContainer, EditNameContainer, InputEdit, Name, NameContainer, PlayerContainer, ScoreValue } from \"../../styles/cards\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PlayerCard(_ref) {\n  _s();\n  let {\n    user,\n    index\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [edit, setEdit] = useState(true);\n  const [score, setScore] = useState(0);\n  const [editScore, setEditScore] = useState(false);\n  const winnerId = useSelector(state => state.game.roundWinner);\n  const round = useSelector(state => state.game.round);\n  const userCount = useSelector(state => state.users.length);\n  const finishGame = useSelector(state => state.game.finishGame);\n  const phaseCount = useSelector(state => state.users.phase);\n  const dispatch = useDispatch();\n  const ifPlayerIsWinner = winnerId && winnerId !== user.id;\n  useEffect(() => {\n    setEditScore(false);\n  }, [round]);\n  const changeName = id => {\n    dispatch(addUserName({\n      name: name,\n      id: id\n    }));\n    setEdit(false);\n  };\n  const inputName = event => {\n    const userName = event.target.value;\n    return setName(userName);\n  };\n  const editName = () => {\n    setEdit(true);\n  };\n  const deleteUser = id => {\n    if (userCount > 2) {\n      dispatch(deleteUserCard(id));\n    }\n  };\n  const roundWon = id => {\n    dispatch(roundWinner(id));\n  };\n  const changeScoreForRound = event => {\n    setScore(parseInt(event.target.value));\n  };\n  const updateScoreInStore = id => {\n    dispatch(updateScore({\n      id: id,\n      score: score\n    }));\n  };\n  const finishPhase = id => {\n    dispatch(finishPhaseForUser(id));\n    if (phaseCount !== 10) {\n      dispatch(finishGame());\n      console.log(phaseCount);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateScoreInStore(user.id);\n    setEditScore(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PlayerContainer, {\n      children: [edit ? /*#__PURE__*/_jsxDEV(EditNameContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(DeletePlayerIcon, {\n            onClick: () => deleteUser(user.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(InputEdit, {\n          variant: \"standard\",\n          size: \"small\",\n          onChange: event => inputName(event),\n          value: name,\n          InputProps: {\n            disableUnderline: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => changeName(user.id),\n          children: /*#__PURE__*/_jsxDEV(CheckMarkContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(NameContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(DeletePlayerIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Name, {\n          sx: {\n            fontSize: 40\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => editName(),\n          children: /*#__PURE__*/_jsxDEV(EditIconContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ScoreValue, {\n        children: user.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), ifPlayerIsWinner ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputEdit, {\n          variant: \"standard\",\n          size: \"small\",\n          disabled: editScore,\n          onChange: event => changeScoreForRound(event),\n          InputProps: {\n            disableUnderline: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: editScore,\n          children: /*#__PURE__*/_jsxDEV(CheckMarkContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(CardsButtons, {\n        onClick: () => roundWon(user.id),\n        variant: \"contained\",\n        children: \"Win\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardsButtons, {\n        onClick: () => finishPhase(user.id),\n        disabled: user.finishedPhase,\n        variant: \"contained\",\n        children: \"Finished phase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Phase \", user.phase]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(PlayerCard, \"JwMJ44H9p9iXudGEngH96xqCcUg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = PlayerCard;\nvar _c;\n$RefreshReg$(_c, \"PlayerCard\");","map":{"version":3,"names":["Button","Typography","useEffect","useState","useDispatch","useSelector","addUserName","deleteUserCard","finishPhaseForUser","updateScore","roundWinner","CardsButtons","CheckMarkContainer","DeletePlayerIcon","EditIconContainer","EditNameContainer","InputEdit","Name","NameContainer","PlayerContainer","ScoreValue","PlayerCard","user","index","name","setName","edit","setEdit","score","setScore","editScore","setEditScore","winnerId","state","game","round","userCount","users","length","finishGame","phaseCount","phase","dispatch","ifPlayerIsWinner","id","changeName","inputName","event","userName","target","value","editName","deleteUser","roundWon","changeScoreForRound","parseInt","updateScoreInStore","finishPhase","console","log","handleSubmit","e","preventDefault","disableUnderline","fontSize","finishedPhase"],"sources":["/Users/oleyna/Desktop/phase10-redux/src/components/playerCard/playerCard.js"],"sourcesContent":["import { Button,Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUserName, deleteUserCard, finishPhaseForUser, updateScore } from \"../../slices/userSlice\";\nimport { roundWinner } from \"../../slices/gameSlice\";\nimport { CardsButtons, CheckMarkContainer, DeletePlayerIcon, EditIconContainer, EditNameContainer, InputEdit, Name, NameContainer, PlayerContainer, ScoreValue } from \"../../styles/cards\";\n\n\nexport function PlayerCard({ user, index }) {\n    const [name, setName] = useState(\"\");\n    const [edit, setEdit] = useState(true);\n    const [score, setScore] = useState(0);\n    const [editScore, setEditScore] = useState(false);\n\n    const winnerId = useSelector((state) => state.game.roundWinner);\n    const round = useSelector((state) => state.game.round);\n    const userCount = useSelector((state) => state.users.length);\n    const finishGame = useSelector((state) => state.game.finishGame)\n    const phaseCount = useSelector((state) => state.users.phase)\n    const dispatch = useDispatch();\n\n    const ifPlayerIsWinner = (winnerId && winnerId !== user.id);\n\n\n    useEffect(() => {\n        setEditScore(false);\n    }, [round]);\n\n\n\n    const changeName = (id) => {\n        dispatch(addUserName({\n            name: name,\n            id: id\n        }));\n        setEdit(false);\n    };\n\n    const inputName = (event) => {\n        const userName = event.target.value;\n        return setName(userName)\n    };\n\n    const editName = () => {\n        setEdit(true);\n    };\n\n    const deleteUser = (id) => {\n        if(userCount > 2){\n            dispatch(deleteUserCard(id));\n        }\n    }\n\n\n\n    const roundWon = (id) => {\n        dispatch(roundWinner(id));\n    };\n\n\n    const changeScoreForRound = (event) => {\n        setScore(parseInt(event.target.value))\n    };\n\n    const updateScoreInStore = (id) => {\n        dispatch(updateScore({\n            id: id,\n            score: score\n        }))\n    };\n\n\n    const finishPhase = (id) => {\n        dispatch(finishPhaseForUser(id));\n        if(phaseCount !== 10 ){\n            dispatch(finishGame()) \n            console.log(phaseCount);\n        }\n    };\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        updateScoreInStore(user.id);\n        setEditScore(true)\n    };\n\n\n\n\n    return (\n        <>\n            <PlayerContainer >\n\n                {edit ?\n                    <EditNameContainer>\n                        <Button>\n                            <DeletePlayerIcon onClick={() => deleteUser(user.id)} />\n                        </Button>\n                        <InputEdit\n                            variant=\"standard\"\n                            size=\"small\"\n                            onChange={(event) => inputName(event)} value={name}\n                            InputProps={{\n                                disableUnderline: true,\n                            }}\n                        />\n                        <Button onClick={() => changeName(user.id)}>\n                            <CheckMarkContainer />\n                        </Button>\n                    </EditNameContainer>\n                    :\n                    <NameContainer>\n                        <Button>\n                            <DeletePlayerIcon />\n                        </Button>\n                        <Name sx={{ fontSize: 40 }}>\n                            {name}\n                        </Name>\n                        <Button onClick={() => editName()}>\n                            <EditIconContainer />\n                        </Button>\n                    </NameContainer>\n                }\n                <ScoreValue>\n                    {user.score}\n                </ScoreValue>\n\n                {ifPlayerIsWinner ?\n                    <form onSubmit={handleSubmit}>\n                        <InputEdit\n                            variant=\"standard\"\n                            size=\"small\"\n                            disabled={editScore}\n                            onChange={(event) => changeScoreForRound(event)}\n                            InputProps={{\n                                disableUnderline: true,\n                            }}\n                        >\n                        </InputEdit>\n                        <Button type=\"submit\" disabled={editScore}>\n                            <CheckMarkContainer />\n                        </Button>\n                    </form>\n\n                    :\n                    <CardsButtons\n                        onClick={() => roundWon(user.id)}\n                        variant={\"contained\"}\n                    >\n                        Win\n                    </CardsButtons>\n                }\n                <CardsButtons\n                    onClick={() => finishPhase(user.id)}\n                    disabled={user.finishedPhase}\n                    variant={\"contained\"}>\n                    Finished phase\n                </CardsButtons>\n                <Typography>Phase {user.phase}</Typography>\n            </PlayerContainer>\n\n\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}